@page "/portrait/{entity_id}"

@using Blazor_specification.Data
@using System.Xml.Linq
 
<h3>Portrait @OntNm(entity_type) @entity_id</h3>
<div class="container-fluid">
    <h4>Fields</h4>
    <MatTable Items="@fields" PageSize="500" ShowPaging="false" class="mat-elevation-z5" style="width:auto;" HeaderRowClass="d-none">
        <MatTableRow>
            <td>@OntNm(context.Attribute("prop").Value)</td>
            <td>@context.Value

            </td>
        </MatTableRow>
    </MatTable>
</div>

<div class="container-fluid">
    <h4>Inverses</h4>
    @foreach (IGrouping<string, XElement> link in inverses)
    {
     <h5>@OntNm(@link.Key)</h5>
    <MatTable Items="@link" PageSize="500" ShowPaging="false" class="mat-elevation-z5" style="width:auto;" HeaderRowClass="d-none">
        <MatTableRow>
            <td>@OntNm(context.Attribute("prop").Value)</td>
            <td>@context.Element("record").Attribute("id").Value</td>
        </MatTableRow>
    </MatTable>
    }
</div>


    @code {
        [Parameter]
        public string entity_id { get; set; }

        private XElement record;

        private string entity_type;
        private IEnumerable<XElement> fields;
        private IEnumerable<IGrouping<string, XElement>> inverses;
        Func<string, string> OntNm = nm => OAData.Ontology.GetOntName(nm);

        protected override void OnParametersSet()
        {
            //DataService.InitDB();
            record = OAData.OADB.GetItemByIdBasic(entity_id, true);
            fields = record.Elements("field");
            entity_type = record.Attribute("type").Value;
            //entity_name = DataService.GetEntityName(entity_id);
            inverses = record.Elements("inverse").GroupBy(inv => inv.Attribute("prop").Value, inv => inv);
        }

    }
