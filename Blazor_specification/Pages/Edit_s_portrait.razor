@using Blazor_specification.Data
@using System.Xml.Linq

<h3 class="text-nowrap">Type: @FormatService.OntNm(entity_type) </h3>
<h3 class="text-nowrap">Name : @entity_name</h3>
@{
    string link = "/portrait/" + entity_id;
}
<h3 class="text-nowrap">Id: <NavLink href="@link" target="_blank">@entity_id</NavLink></h3>


@if (image_uri != "")
{
    var src = "/Docs/GetPhoto?u=" + image_uri + "&s=small";
    <img src="@src" />
}



@code {
    [Parameter]
    public string entity_id { get; set; }

    private XElement record;

    private string entity_type;
    private string entity_name;
    private string image_uri = "";
    private IEnumerable<XElement> fields;

    protected override void OnParametersSet()
    {
        XElement format = new XElement("record", new XElement("field", new XAttribute("prop", "http://fogid.net/o/name")), new XElement("field", new XAttribute("prop", "http://fogid.net/o/uri")));

        record = OAData.OADB.GetItemById(entity_id, format);

        fields = record.Elements("field");
        entity_type = record.Attribute("type").Value;
        var has_name = fields.FirstOrDefault(f => f.Attribute("prop").Value == "http://fogid.net/o/name");
        if (!(has_name is null))
        {
            entity_name = has_name.Value;
        }


        if (entity_type == "http://fogid.net/o/photo-doc")
        {
            image_uri = fields.FirstOrDefault(f => f.Attribute("prop").Value == "http://fogid.net/o/uri").Value;

        }
    }

}
